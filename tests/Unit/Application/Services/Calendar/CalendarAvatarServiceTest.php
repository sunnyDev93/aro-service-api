<?php

declare(strict_types=1);

namespace Tests\Unit\Application\Services\Calendar;

use App\Application\Services\Calendar\CalendarAvatarService;
use App\Infrastructure\Services\Workday\WorkdayService;
use ImagickException;
use Tests\TestCase;
use Tests\Tools\TestValue;

class CalendarAvatarServiceTest extends TestCase
{
    private const AVATAR_BASE64 = '';

    /**
     * @test
     */
    public function it_returns_avatar_string(): void
    {
        $workdayServiceMock = \Mockery::mock(WorkdayService::class);

        $workdayServiceMock->shouldReceive('getEmployeePhotoBase64')
            ->once()
            ->with(TestValue::WORKDAY_ID)
            ->andReturn(self::AVATAR_BASE64);

        $calendarAvatarService = new CalendarAvatarService($workdayServiceMock);

        $avatar = $calendarAvatarService->getAvatar(TestValue::WORKDAY_ID);

        $this->assertIsString($avatar);
    }

    /**
     * @test
     */
    public function it_returns_avatar_from_cache_string(): void
    {
        $workdayServiceMock = \Mockery::mock(WorkdayService::class);

        $workdayServiceMock->shouldReceive('getEmployeePhotoBase64')
            ->once()
            ->with(TestValue::WORKDAY_ID)
            ->andReturn(self::AVATAR_BASE64);

        $calendarAvatarService = new CalendarAvatarService($workdayServiceMock);

        $avatar1 = $calendarAvatarService->getAvatar(TestValue::WORKDAY_ID);
        $avatar2 = $calendarAvatarService->getAvatar(TestValue::WORKDAY_ID);

        $this->assertEquals($avatar1, $avatar2);
    }

    /**
     * @test
     */
    public function it_throws_exception_when_incorrect_image_received(): void
    {
        $workdayServiceMock = \Mockery::mock(WorkdayService::class);

        $workdayServiceMock->shouldReceive('getEmployeePhotoBase64')
            ->once()
            ->with(TestValue::WORKDAY_ID)
            ->andReturn('invalid base 64 string');

        $calendarAvatarService = new CalendarAvatarService($workdayServiceMock);

        $this->expectException(ImagickException::class);

        $calendarAvatarService->getAvatar(TestValue::WORKDAY_ID);
    }
}
